package com.lagou.action;

import java.util.List;
import java.util.Map;

import org.apache.struts2.convention.annotation.Action;
import org.apache.struts2.convention.annotation.InterceptorRef;
import org.apache.struts2.convention.annotation.Namespace;
import org.apache.struts2.convention.annotation.ParentPackage;
import org.apache.struts2.convention.annotation.Result;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Controller;

import com.lagou.bizImp.JobinfoBIZImp;
import com.lagou.domain.Jobinfo;
import com.lagou.domain.Userinfo;
import com.lagou.vo.JobSearchVO;
import com.opensymphony.xwork2.ActionContext;
import com.opensymphony.xwork2.ActionSupport;

@Controller("JobinfoAction")
@ParentPackage("json-default")
@Scope("prototype")
@Namespace("/jobinfo")
public class JobinfoAction extends ActionSupport {
	private String jsonText;
	private Integer jobId;

	

	private JobSearchVO jobvo;
	

	@Autowired
	@Qualifier("JobinfoBIZImp")
	private JobinfoBIZImp jobinfoBIZ;

	
	/**
	 * 根据id查职位信息
	 * 
	 * @return 返回Json格式的所有职位信息文本
	 * @author 姜翔宇
	 */
	@Action(value = "findbyid", results = { @Result(location = "/commonJsp/jobdetail.jsp") })
	public String findById() {
		Jobinfo jobinfo = this.jobinfoBIZ.findById(this.jobId);
		ActionContext context = ActionContext.getContext();
		Map<String, Object> req_map = (Map<String, Object>) context
				.get("request");
		
		req_map.put("jobinfoList", jobinfo);
		return ActionSupport.SUCCESS;
	}
	/**
	 * 加载所有职位信息
	 * 
	 * @return 返回Json格式的所有职位信息文本
	 * @author 姜翔宇
	 */
	@Action(value = "findall", results = { @Result(location = "/jobinfo/test.jsp") })
	public String findAll() {
		List<Jobinfo> jobinfoList = this.jobinfoBIZ.findAll();
		ActionContext context = ActionContext.getContext();
		Map<String, Object> req_map = (Map<String, Object>) context
				.get("request");

		req_map.put("jobinfoList", jobinfoList);
		return ActionSupport.SUCCESS;
	}

	@Action(value = "findnew", results = { @Result(name = "success", type = "json", params = {
			"root", "jsonText" }) }, interceptorRefs = {
			@InterceptorRef("defaultStack"), @InterceptorRef("json") })
	/**
	 * 加载最新职位信息
	 * @author 姜翔宇
	 * @return 返回Json格式的最新职位列表文本
	 */
	public String findNew() {
		this.jsonText = this.jobinfoBIZ.findByNew();
		return ActionSupport.SUCCESS;
	}

	@Action(value = "findhot", results = { @Result(name = "success", type = "json", params = {
			"root", "jsonText" }) }, interceptorRefs = {
			@InterceptorRef("defaultStack"), @InterceptorRef("json") })
	/**
	 * 加载热门职业信息
	 * @author 姜翔宇
	 * @return 返回Json格式的最热门职位列表文本
	 */
	public String findHot() {
		this.jsonText = this.jobinfoBIZ.findByHot();
		return ActionSupport.SUCCESS;
	}
	/**
	 * 根据个人的职位订阅信息来查询职位
	 * 
	 * @return
	 *
	 * @author 姜翔宇
	 */
	@Action(value = "findsubs", results = { @Result(name = "success", type = "json", params = {
			"root", "jsonText" })}, interceptorRefs = {
			@InterceptorRef("defaultStack"), @InterceptorRef("json") })
	public String findByUserSubscribe() {
		ActionContext actionContext = ActionContext.getContext();
		Map<String, Object> ses_map = (Map<String, Object>) actionContext
				.get("session");
		Userinfo userinfo = (Userinfo) ses_map.get("userinfo");
		if (userinfo.getSubscribes() != null
				&& userinfo.getSubscribes().size() != 0) {
			this.jsonText = this.jobinfoBIZ.findBySubscribe(userinfo
					.getSubscribes());
		} else {
			this.jsonText =new String("<li>对不起,您还没有订阅职位!<*li>");
		}
		return ActionSupport.SUCCESS;
	}
	@Action(value = "search", results = { @Result(location = "/commonJsp/jobList.jsp") })
	public String  findBySearch(){
		List<Jobinfo> jobinfoList = this.jobinfoBIZ.findBySearch(this.jobvo);
		ActionContext context = ActionContext.getContext();
		Map<String, Object> req_map = (Map<String, Object>) context
				.get("request");
		req_map.put("jobinfoList", jobinfoList);
		req_map.put("jVO", this.jobvo);
		return ActionSupport.SUCCESS;
	}
	
	
	
	public JobSearchVO getJobvo() {
		return jobvo;
	}

	public void setJobvo(JobSearchVO jobvo) {
		this.jobvo = jobvo;
	}
	
	public String getJsonText() {
		return jsonText;
	}

	public void setJsonText(String jsonText) {
		this.jsonText = jsonText;
	}

	public JobinfoBIZImp getJobinfoBIZ() {
		return jobinfoBIZ;
	}

	public void setJobinfoBIZ(JobinfoBIZImp jobinfoBIZ) {
		this.jobinfoBIZ = jobinfoBIZ;
	}
	public Integer getJobId() {
		return jobId;
	}

	public void setJobId(Integer jobId) {
		this.jobId = jobId;
	}

}
